// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// enums :
enum UserType {
  ADMIN
  USER
}

enum RoomType {
  PRIVATE
  PUBLIC
  PROTACTED
}

// models :
model User {
  id           String         @id @default(uuid())
  login        String         @unique
  email        String         @unique
  password     String?
  first_name   String?
  last_name    String?
  kind         String?
  image        String?
  is_active    Boolean        @default(false)
  created_at   DateTime       @default(now())
  updated_at   DateTime       @updatedAt
  UserMessages UserMessages[]
  Members      Members[]
  Messages     Messages[]
}

model UserMessages {
  id       String     @id @default(uuid())
  user     User       @relation(fields: [userId], references: [id])
  RoomId   Rooms      @relation(fields: [roomsId], references: [id])
  messages Messages[]
  userId   String
  roomsId  String
}

model Rooms {
  id           String         @id @default(uuid())
  name         String         @unique
  type         RoomType       @default(PUBLIC)
  members      Members[]
  messages     Messages[]
  UserMessages UserMessages[]
}

model Members {
  id      String   @id @default(uuid())
  user    User     @relation(fields: [userId], references: [id])
  RoomId  Rooms    @relation(fields: [roomsId], references: [id])
  type    UserType @default(USER)
  userId  String
  roomsId String
}

model Messages {
  content String
  id      String @id @default(uuid())
  sender  User   @relation(fields: [senderId], references: [id])
  // receiver User   @relation(fields: [receiverId], references: [id])
  roomId  Rooms  @relation(fields: [roomsId], references: [id])

  UserMessages   UserMessages? @relation(fields: [userMessagesId], references: [id])
  userMessagesId String?
  senderId       String
  roomsId        String
}
